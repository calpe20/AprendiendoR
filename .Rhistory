1+1+
2
getwd()
setwd("d:/repositorios/cursor")
setwd("d:/repositorios/AprendiendoR")
x<-3
x +3
s <- 34
s*x
cls
clear
c <- "Hola soy R"
x>s
s>x
s>x
x <- 4
y_5
5 <- 5
y <- 5
x>y
y||x
x <- 10/5
x - y
?read.csv("datos.csv")
datos
datos <- read.csv("datos.csv")
datos
install.packages("ggplot")
install.packages("ggplot2")
qplot()
datos <- read.csv("datos.csv")
#
# install.packages("ggplot2")
library(ggplot2)
install.packages("xlsx")
install.packages("rJava")
# install.packages("rJava")
library(rJava)
# install.packages("rJava")
library(rJava)
read.xlsx("datos.xlsx")
?read.xlsx
install.packages("xlsx")
install.packages("xlsx")
# install.packages("xlsx")
library(xlsx)
?read.xlsx
# ?read.xlsx
datos <- read.xlsx("datos.xlsx")
# ?read.xlsx
datos <- read.xlsx("datos.xlsx", 1)
datos
library(XML)
install.packages("XML")
library(XML)
datos.xml <- xmlTreeParse("datos.xml")
datos.xml
datos.xml <- xmlRoot(datos.xml)
datos.xml
datos.xml
datos.xml
function (..., row.names = NULL, check.rows = FALSE, check.names = TRUE,
fix.empty.names = TRUE, stringsAsFactors = FALSE)
datos.xml
install.packages("rjson")
data.json <- fromJSON("datos.JSON")
data.json <- fromJSON(file="datos.JSON")
?fromJSON
# install.packages("rjson")
library(rjson)
data.json
data.json <- fromJSON(file="datos.JSON")
data <- fromJSON(file="datos.JSON")
data
data$Edad
data$Edad.mean()
data$Edad.mean
data$Edad
mean(data$Edad)
sum(data$Edad)
table(data$Genero)
table(data)
str(data)
sumary(data)
summary(data)
data$MayorEdad <- data$Edad>=18
data
read.table("dataEdad.xlsx")
write.table(data, "dataEdad.xlsx")
write.table(data, "dataEdad.csv")
write.table(data, "dataEdad.csv", quote = FALSE, sep = ";")
?write.table
# data <- fromJSON(file="datos.JSON")
data = read.table("datosEdad.csv", sep = ";")
# data <- fromJSON(file="datos.JSON")
data = read.table("dataEdad.csv", sep = ";")
data
str(data)
class(x)
x
x
x <- "diez"
class(x)
x <- 10
class(x)
x <- "diez"
class(x)
x <- 10
# Tipos de Objetos - Vectores
vector <- c(1,2,3,4,5)
vector
vector3 <- vector1 + vector2
# Tipos de Objetos - Vectores
vector1 <- c(1,2,3,4,5)
vector2 <- c(6,7,8,9,0)
vector3 <- vector1 + vector2
vector
vector3
vector4
vector4 <- c("HOla", "soy", "Angel")
vector4
vector5 <- vector4 + vector2
?matrix
matrix(1:9,, nrow=3, ncol=3)
mymatrix <- matrix(1:9,, nrow=3, ncol=3)
mymatrix[1]
mymatrix[2]
mymatrix[1, 3]
mymatrix/2
mymatrix
# Listas
list(vector1, mymatriz)
# Listas
list(vector1, mymatrix)
# Listas
mylist <- list(vector1, mymatrix)
mylist[1]
mylist[2]
install.packages("XML")
library(XML)
datos.xml <- xmlTreeParse("datos.xml")
datos.xml <- xmlRoot(datos.xml)
datos.xml <- xmlSApply(datos.xml, function(x) xmlSApply(x, xmlValue))
datos.xml <- data.frame(t(datos.xml), row.names = NULL)
datos.xml
datos.xml
datos.xml <- data.frame(t(datos.xml))
datos.xml
datos.xml <- data.frame(t(datos.xml), row.names = NULL)
datos.xml
source("D:/repositorios/AprendiendoR/ejercicio03-01.R")
data.frame(mylist)
data.frame(mylist, row.names = NULL)
source("D:/repositorios/AprendiendoR/ejercicio03-01.R")
iris
iris["Sepal.Length"]
iris[c("Sepal.Length", "Sepal.Width")]
?subset
subset(iris, iris$Sepal.Length>5)
subset(iris, iris$Sepal.Length>5 & iris$Species == "setosa")
iris[3,5]
iris[1,2]
iris[1:2,1:5]
iris[c(2, 4,6), 1:2]
a <- c(1,2,3)
b <- c("a", "b", "c")
c <- c(TRUE, FALSE, TRUE)
mylist <- list(a,b,c)
mylist[1]
mylist[[1]]
mylist[1:2]
mylist[[1]]
mylist[[1]][2]
mylist[[1]]
mylist[[1]][2]
mylist[[1]][1,3]
mylist[[1]][1:2]
MiFuncion(20)
MiFuncion(20)
# Crear Funciones
MiFuncion <- function(edad){
datos <- read.table("datos.csv", sep = ",", header = TRUE)
datos$MayorEdad <- datos$Edad > edad
write.table(datos, "datos_nuevos.csv", quote = FALSE, sep = ";", row.names = FALSE)
}
MiFuncion(20)
MiFuncion(20)
MiFUncion2 <- function(x,y,numero, veces){
z <- x + y
for(a in 1:veces){
z <- z + numero
}
}
MiFUncion2(1, 2, 5, 10)
1:veces
MiFUncion2 <- function(x,y,numero, veces){
z <- x + y
for(a in 1:veces){
z <- z + numero
}
1:veces
MiFUncion2(1, 2, 5, 10)
MiFUncion2 <- function(x,y,numero, veces){
z <- x + y
for(a in 1:veces){
z <- z + numero
}
return(z)
}
MiFUncion2(1, 2, 5, 10)
?MiFUncion2(1, 2, 5, 10)
MiFUncion2 <- function(x,y,numero, veces){
z <- x + y
for(a in 1:veces){
z <- z + numero
}
return(z)
}
MiFUncion2(1, 2, 5, 10)
MiFUncion2(1, 2, 5, 10)
MiFUncion2 <- function(x,y,numero, veces){
z <- x + y
for(a in 1:veces){
z <- z + numero
}
return(z)
}
MiFUncion2(1, 2, 5, 10)
a <- MiFUncion2(1, 2, 5, 10)
a
MiFuncion(20)
MiFUncion2 <- function(x,y,numero, veces){
z <- x + y
for(a in 1:veces){
z <- z + numero
}
return(z)
}
a <- MiFUncion2(1, 2, 5, 10)
a
HorasASegundos <- function(hor){
seg = hor * 60
return(seg)
}
HorasASegundos(2)
HorasASegundos(2)
HorasASegundos <- function(hor){
seg = hor * 60
return(seg)
}
HorasASegundos(2)
exit()
;
